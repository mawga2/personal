name: Steam Price Tracker

on:
  schedule:
    - cron: '0 0,8,16 * * *'  # Runs at 00:00, 08:00, 16:00 UTC daily
  workflow_dispatch:

jobs:
  run-tracker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./tracker
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "Error: requirements.txt not found"
            exit 1
          fi

      - name: Verify input file
        working-directory: ./tracker
        run: |
          if [ ! -f steam_urls.txt ]; then
            echo "Error: steam_urls.txt not found"
            exit 1
          fi

      - name: Run tracker script
        working-directory: ./tracker
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
        run: |
          if [ -f monitor.py ]; then
            python monitor.py
          else
            echo "Error: monitor.py not found"
            exit 1
          fi

      - name: Commit and push changes
        if: success()  # Only run if previous steps succeed
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git clean -fd
          git reset --hard
          cd $GITHUB_WORKSPACE
          git pull --rebase
          git add -f tracker/steam_games_db.csv
          git commit -m "Update steam_games_db.csv with latest scrape data" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
